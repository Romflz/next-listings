
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  f_user_id: 'f_user_id',
  email: 'email',
  email_verified: 'email_verified',
  picture: 'picture',
  name: 'name',
  role: 'role',
  lastSignedIn: 'lastSignedIn',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LocalityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  slug: 'slug'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt',
  authorId: 'authorId',
  revieweeId: 'revieweeId'
};

exports.Prisma.ListingsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  price: 'price',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  street_name: 'street_name',
  userId: 'userId',
  images: 'images',
  available_from: 'available_from',
  ensuite: 'ensuite',
  listingType: 'listingType',
  maxGuestsInRoom: 'maxGuestsInRoom',
  totalBathrooms: 'totalBathrooms',
  totalBedrooms: 'totalBedrooms',
  totalOccupants: 'totalOccupants',
  localitySlug: 'localitySlug',
  contactNumber: 'contactNumber',
  contactNumberExtension: 'contactNumberExtension'
};

exports.Prisma.AmenityScalarFieldEnum = {
  slug: 'slug',
  label: 'label',
  id: 'id'
};

exports.Prisma.ListingAmenityScalarFieldEnum = {
  listingId: 'listingId',
  amenityId: 'amenityId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.ListingType = exports.$Enums.ListingType = {
  PRIVATE_ROOM: 'PRIVATE_ROOM',
  SHARED_ROOM: 'SHARED_ROOM'
};

exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN',
  MODERATOR: 'MODERATOR'
};

exports.Prisma.ModelName = {
  User: 'User',
  Locality: 'Locality',
  Review: 'Review',
  Listings: 'Listings',
  Amenity: 'Amenity',
  ListingAmenity: 'ListingAmenity'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\roman\\Documents\\next\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\roman\\Documents\\next\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id              String     @id @default(uuid())\n  f_user_id       String     @unique\n  email           String     @unique\n  email_verified  Boolean\n  picture         String?\n  name            String?\n  role            Role       @default(USER)\n  lastSignedIn    DateTime?\n  createdAt       DateTime   @default(now())\n  updatedAt       DateTime   @updatedAt\n  listings        Listings[]\n  reviewsWritten  Review[]   @relation(\"ReviewsWritten\")\n  reviewsReceived Review[]   @relation(\"ReviewsReceived\")\n\n  @@index([f_user_id])\n}\n\nmodel Locality {\n  id        String     @id @default(uuid())\n  name      String     @unique\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n  slug      String     @unique\n  listings  Listings[]\n}\n\nmodel Review {\n  id         String   @id @default(uuid())\n  rating     Int\n  comment    String?\n  createdAt  DateTime @default(now())\n  authorId   String\n  revieweeId String\n  author     User     @relation(\"ReviewsWritten\", fields: [authorId], references: [id])\n  reviewee   User     @relation(\"ReviewsReceived\", fields: [revieweeId], references: [id])\n}\n\nmodel Listings {\n  id                     String           @id @default(uuid())\n  title                  String\n  description            String?\n  price                  Float\n  createdAt              DateTime         @default(now())\n  updatedAt              DateTime         @updatedAt\n  street_name            String\n  userId                 String\n  images                 String[]\n  available_from         DateTime\n  ensuite                Boolean          @default(false)\n  listingType            ListingType\n  maxGuestsInRoom        Int              @default(1)\n  totalBathrooms         Int\n  totalBedrooms          Int\n  totalOccupants         Int\n  localitySlug           String\n  contactNumber          String?\n  contactNumberExtension String?\n  amenities              ListingAmenity[]\n  locality               Locality         @relation(fields: [localitySlug], references: [slug])\n  user                   User             @relation(fields: [userId], references: [id])\n}\n\nmodel Amenity {\n  slug     String           @unique\n  label    String\n  id       Int              @id @default(autoincrement())\n  listings ListingAmenity[]\n\n  @@index([slug])\n}\n\nmodel ListingAmenity {\n  listingId String\n  amenityId Int\n  amenity   Amenity  @relation(fields: [amenityId], references: [id])\n  listing   Listings @relation(fields: [listingId], references: [id], onDelete: Cascade)\n\n  @@id([listingId, amenityId])\n  @@index([listingId])\n  @@index([amenityId])\n}\n\nenum ListingType {\n  PRIVATE_ROOM\n  SHARED_ROOM\n}\n\nenum Role {\n  USER\n  ADMIN\n  MODERATOR\n}\n",
  "inlineSchemaHash": "a2f632717b4d96e22d396d563d78ada0e46ba1253c346180d838f8d9fef8cff7",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"f_user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email_verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"picture\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"lastSignedIn\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"listings\",\"kind\":\"object\",\"type\":\"Listings\",\"relationName\":\"ListingsToUser\"},{\"name\":\"reviewsWritten\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewsWritten\"},{\"name\":\"reviewsReceived\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewsReceived\"}],\"dbName\":null},\"Locality\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listings\",\"kind\":\"object\",\"type\":\"Listings\",\"relationName\":\"ListingsToLocality\"}],\"dbName\":null},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"revieweeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewsWritten\"},{\"name\":\"reviewee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewsReceived\"}],\"dbName\":null},\"Listings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"street_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"available_from\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ensuite\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"listingType\",\"kind\":\"enum\",\"type\":\"ListingType\"},{\"name\":\"maxGuestsInRoom\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalBathrooms\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalBedrooms\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalOccupants\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"localitySlug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactNumberExtension\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amenities\",\"kind\":\"object\",\"type\":\"ListingAmenity\",\"relationName\":\"ListingAmenityToListings\"},{\"name\":\"locality\",\"kind\":\"object\",\"type\":\"Locality\",\"relationName\":\"ListingsToLocality\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ListingsToUser\"}],\"dbName\":null},\"Amenity\":{\"fields\":[{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"listings\",\"kind\":\"object\",\"type\":\"ListingAmenity\",\"relationName\":\"AmenityToListingAmenity\"}],\"dbName\":null},\"ListingAmenity\":{\"fields\":[{\"name\":\"listingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amenityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amenity\",\"kind\":\"object\",\"type\":\"Amenity\",\"relationName\":\"AmenityToListingAmenity\"},{\"name\":\"listing\",\"kind\":\"object\",\"type\":\"Listings\",\"relationName\":\"ListingAmenityToListings\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

