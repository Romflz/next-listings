// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  f_user_id      String    @unique
  email          String    @unique
  email_verified Boolean
  picture        String?
  name           String?
  role           Role      @default(USER)
  lastSignedIn   DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  listings        Listings[]
  reviewsWritten  Review[]   @relation("ReviewsWritten")
  reviewsReceived Review[]   @relation("ReviewsReceived")

  @@index([f_user_id])
}

model Locality {
  id        String   @id @default(uuid())
  name      String   @unique
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  listings Listings[]
}

model Review {
  id        String   @id @default(uuid())
  rating    Int
  comment   String?
  createdAt DateTime @default(now())

  authorId String
  author   User   @relation("ReviewsWritten", fields: [authorId], references: [id])

  revieweeId String
  reviewee   User   @relation("ReviewsReceived", fields: [revieweeId], references: [id])
}

model Listings {
  // General Shared/Private Room Listing Info
  id             String      @id @default(uuid())
  title          String
  description    String?
  price          Float
  images         String[]
  available_from DateTime
  street_name    String
  listingType    ListingType
  ensuite        Boolean     @default(false)

  // Contact Information
  contactNumber          String?
  contactNumberExtension String? // e.g., "+356" for Malta

  // Details about the property
  totalBedrooms   Int
  totalBathrooms  Int
  totalOccupants  Int
  maxGuestsInRoom Int @default(1)

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  userId String
  user   User   @relation(fields: [userId], references: [id])

  localitySlug String
  locality     Locality @relation(fields: [localitySlug], references: [slug])

  amenities    ListingAmenity[]
  valueHistory ListingValueHistory[]

  @@index([createdAt])
  @@index([localitySlug])
  @@index([listingType])
}

model ListingValueHistory {
  id        String   @id @default(uuid())
  listingId String
  listing   Listings @relation(fields: [listingId], references: [id], onDelete: Cascade)

  // Value metrics
  valueScore Float // The calculated value score (1-10)
  price      Float // The price at this point in time

  // Context for the score calculation
  listingType  ListingType
  ensuite      Boolean
  maxGuests    Int // maxGuestsInRoom at this time
  amenityCount Int // Number of amenities at this time

  // Locality for trend analysis
  localitySlug String

  // Timestamp
  createdAt DateTime @default(now())

  // Indexes for efficient querying
  @@index([listingId])
  @@index([localitySlug])
  @@index([createdAt])
  @@index([valueScore])
  @@index([listingType, createdAt])
  @@index([localitySlug, createdAt])
}

model Amenity {
  id    Int    @id @default(autoincrement())
  slug  String @unique
  label String

  listings ListingAmenity[]

  @@index([slug])
}

model ListingAmenity {
  listingId String
  listing   Listings @relation(fields: [listingId], references: [id], onDelete: Cascade)

  amenityId Int
  amenity   Amenity @relation(fields: [amenityId], references: [id])

  @@id([listingId, amenityId])
  @@index([listingId])
  @@index([amenityId])
}

enum ListingType {
  PRIVATE_ROOM
  SHARED_ROOM
}

enum Role {
  USER
  ADMIN
  MODERATOR
}